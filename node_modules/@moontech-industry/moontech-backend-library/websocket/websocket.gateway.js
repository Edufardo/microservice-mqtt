"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebsocketGateway = void 0;
const common_1 = require("@nestjs/common");
const websockets_1 = require("@nestjs/websockets");
const chalk_1 = require("chalk");
const http_1 = require("http");
let WebsocketGateway = class WebsocketGateway {
    constructor() {
        this.logger = new common_1.Logger(`socket`);
        console.log((0, chalk_1.bgGreen)('Websocket started on port: 8080'));
    }
    afterInit(server) {
    }
    handleDisconnect(client) {
        console.log((0, chalk_1.bgRed)('Client disconnected: ', client['handshake'].headers.origin));
    }
    async handleConnection(client) {
        console.log((0, chalk_1.bgGreen)('Client connected: ', client['handshake'].headers.origin));
    }
    sendMessageBroadcast(message, data) {
        data == null ? this.server.emit(message) : this.server.emit(message, data);
    }
};
__decorate([
    (0, websockets_1.WebSocketServer)(),
    __metadata("design:type", http_1.Server)
], WebsocketGateway.prototype, "server", void 0);
WebsocketGateway = __decorate([
    (0, common_1.Injectable)(),
    (0, websockets_1.WebSocketGateway)(8080),
    __metadata("design:paramtypes", [])
], WebsocketGateway);
exports.WebsocketGateway = WebsocketGateway;
//# sourceMappingURL=websocket.gateway.js.map