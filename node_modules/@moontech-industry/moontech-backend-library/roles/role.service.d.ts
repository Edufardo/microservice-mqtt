import { IRole } from '../models-mongo/role.model';
import { MongoDbService } from '../mongo-db/mongo-db.service';
import { RoleDto } from './dto/role.dto';
import { PermissionService } from '../permissions/permissions.service';
import { WebsocketGateway } from '../websocket/websocket.gateway';
import { UsersService } from '../users/users.service';
export declare class RoleService {
    private readonly mongoDb;
    private readonly permissionService;
    private usersService;
    private readonly websocketService;
    private RoleModel;
    constructor(mongoDb: MongoDbService, permissionService: PermissionService, usersService: UsersService, websocketService: WebsocketGateway);
    populate(): Promise<void>;
    getRoles(): Promise<RoleDto[]>;
    createRole(role: RoleDto): Promise<RoleDto>;
    deleteRole(roleName: string): Promise<IRole>;
    updateRole(oldRoleName: string, newRole: RoleDto): Promise<IRole>;
    findRole(role: string): Promise<IRole>;
    notifyWebsockets(): Promise<void>;
}
