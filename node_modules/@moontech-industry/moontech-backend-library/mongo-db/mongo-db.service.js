"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongoDbService = void 0;
const common_1 = require("@nestjs/common");
const mongoose = require("mongoose");
let MongoDbService = class MongoDbService {
    constructor(options) {
        this.options = options;
        if (options) {
            this.createConnectionDB(options);
        }
    }
    async createConnectionDB(options) {
        const CARGOTEC_DB_URI = 'mongodb://' + options.ip + ':' + options.port + '/' + options.database;
        this.dbConnection = mongoose.createConnection(CARGOTEC_DB_URI, {
            useNewUrlParser: true,
            useFindAndModify: true,
            useUnifiedTopology: true,
            useCreateIndex: true,
        });
        this.dbConnection.once('open', () => {
            console.log('Connected to ' + options.database);
        });
        this.dbConnection.on('error', () => {
            console.log('Error connecting to ' + options.database);
        });
    }
    getConnection() {
        return this.dbConnection;
    }
};
MongoDbService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)('CONFIG_OPTIONS')),
    __metadata("design:paramtypes", [Object])
], MongoDbService);
exports.MongoDbService = MongoDbService;
//# sourceMappingURL=mongo-db.service.js.map