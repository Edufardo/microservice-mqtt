import { IUser } from '../models-mongo/user.model';
import { MongoDbService } from '../mongo-db/mongo-db.service';
import { RoleService } from '../roles/role.service';
import { WebsocketGateway } from '../websocket/websocket.gateway';
import { CreateUserDto } from './dto/createUser.dto';
import { EditUserDto } from './dto/editUser.dto';
import { UserDto } from './dto/user.dto';
export declare class UsersService {
    private readonly mongoDb;
    private roleService;
    private readonly websocketService;
    private UserModel;
    constructor(mongoDb: MongoDbService, roleService: RoleService, websocketService: WebsocketGateway);
    populate(): Promise<void>;
    createUser(newUser: CreateUserDto): Promise<UserDto>;
    deleteUser(userCode: string): Promise<IUser>;
    updateUser(userCode: string, newUser: EditUserDto): Promise<IUser>;
    findUser(userCode: string): Promise<IUser>;
    fetchAllUsers(): Promise<UserDto[]>;
    roleHasUsers(name: string): Promise<boolean>;
    fetchUserData(userCode: string): Promise<IUser>;
    notifyWebsockets(): Promise<void>;
}
