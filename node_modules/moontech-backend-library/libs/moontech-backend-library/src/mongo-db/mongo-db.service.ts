import { Inject, Injectable } from '@nestjs/common';
import * as mongoose from 'mongoose';
import { MongoDbConfig } from './mongo-db-config';

@Injectable()
export class MongoDbService {
  //database: mongoose.Connection;
  private dbConnection: mongoose.Connection &
    Promise<mongoose.Connection>;

  constructor(
    @Inject('CONFIG_OPTIONS') private options: MongoDbConfig, 
  ) {
    if(options){
      this.createConnectionDB(options);
    }
  }

  async createConnectionDB(options: MongoDbConfig) {
    //WIP - Auth for DB access enabled(At MongoDB container level) - To be determined final user and password. For testing MoontechAdmin:MoontechPassword are used.
    //WIP - If there is no Auth enabled use this uri instead : mongodb://@localhost:27017
    //const CARGOTEC_DB_URI = 'mongodb://10.5.16.27:27017/cargotec-db';
    const CARGOTEC_DB_URI = 'mongodb://' + options.ip + ':' + options.port + '/' + options.database;
    
    this.dbConnection = mongoose.createConnection(CARGOTEC_DB_URI, {
      useNewUrlParser: true,
      useFindAndModify: true,
      useUnifiedTopology: true,
      useCreateIndex: true,
    });
    // Check connection status;
    this.dbConnection.once('open', () => {
      console.log('Connected to ' + options.database);
    });
    this.dbConnection.on('error', () => {
      console.log('Error connecting to ' + options.database);
    });
  }

  getConnection(): mongoose.Connection & Promise<mongoose.Connection> {
    return this.dbConnection;
  }


}
