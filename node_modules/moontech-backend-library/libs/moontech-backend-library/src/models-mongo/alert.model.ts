import * as mongoose from 'mongoose';
import { Document } from 'mongoose';
import { TYPEALERT } from '../common/typeAlert';

export interface IAlert extends Document {
  id?:number;
  type: TYPEALERT;
  description: string;
  date?: Date;
  read: boolean;
}

export const alertsSchema = new mongoose.Schema<IAlert>(
  {
    id:{ type: Number, unique: true},
    type: { type: String, required: true },
    description: { type: String, required: true },
    date: { type: Date, default: new Date() },
    read: {type: Boolean, default: false}
  },
);

alertsSchema.pre('save', function preSave(next) {
  const doc = this;
  if (doc.isNew) {
      const AlertModel = this.model('Alert');
      AlertModel.findOne().sort({id: "desc"}).then( nextValue => {
        if(nextValue){
          doc['id'] = nextValue.id + 1
        }else{
          doc['id'] = 1;
        }
        next();
      }); 
  }
});
