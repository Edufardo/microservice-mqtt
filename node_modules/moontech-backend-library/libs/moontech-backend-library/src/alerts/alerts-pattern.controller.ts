import { Controller } from '@nestjs/common';
import { MessagePattern } from '@nestjs/microservices';
import { AGV_PATTERNS } from '../agvs/agv.patterns';
import { ALERTS_PATTERNS } from './alert-patterns';
import { AlertsService } from './alerts.service';
import { AlertDto } from './dto/alert.dto';

@Controller()
export class AlertsPatternController {
/*
    constructor(
        private alertService: AlertsService
    ){ }

    @MessagePattern(ALERTS_PATTERNS.MESSAGES_HANDLERS.GET_ALERTS)
    getAlerts() {
      return this.alertService.getAlerts();
    }

    @MessagePattern(ALERTS_PATTERNS.MESSAGES_HANDLERS.GET_ALERTS_UNREAD)
    getUnreadAlerts(): Promise<AlertDto> {
        return this.alertService.getUnreadAlerts();
    }

    @MessagePattern(ALERTS_PATTERNS.MESSAGES_HANDLERS.READ_ALERT)
    readAlert(data: { id: number }): Promise<AlertDto> {
        return this.alertService.readAlert(data.id);
    }

    @MessagePattern(ALERTS_PATTERNS.MESSAGES_HANDLERS.DELETE_ALERT)
    deleteAlerts(): Promise<Boolean> {
        return this.alertService.deleteAllAlerts();
    }

    @MessagePattern(ALERTS_PATTERNS.MESSAGES_HANDLERS.DELETE_ALERT_BY_ID)
    deleteAlertById(data: { id: number }): Promise<Boolean> {
        return this.alertService.deleteAlertById(data.id);
    }

*/
}
