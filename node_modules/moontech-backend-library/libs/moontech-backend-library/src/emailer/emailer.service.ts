import { Inject, Injectable } from '@nestjs/common';
import { EmailerConfig } from './emailer-config';
import { Message } from './emailer-message';

@Injectable()
export class EmailerService {
  constructor(@Inject('CONFIG_OPTIONS') private options: EmailerConfig) {}

  sending_Email_Address;

  //TODO: WIP test if works then inject parameters from appmodule dynamically
  sendMail(data: Message): void {
    //console.log('Email sent OK');
    var nodemailer = require('nodemailer');
    var transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: this.options.sending_Email_Address,
        pass: this.options.sending_Email_Password,
      },
    });
    const mailOptions = {
      from: this.options.sending_Email_Address, // sender address -> if we use google ,we need to enable unsafe application inside google in order to work
      to: data.receivers, // list of receivers
      subject: data.subject, // Subject line
      html: '<p>' + data.text + '</p>', // plain text body
    };
    transporter.sendMail(mailOptions, function (err, info) {
      if (err) {
        console.error(err);
        console.log(
          'ATTENTION - If using GMAIL first (before making any changes to the password) make sure that unsafe applications is ENABLED inside google account.(Its DISBALED by default so it will not authorize any connection from out backend).',
        );
      } else {
        console.log('MAILER - Email(s) alert(s) sent successfully.');
        //console.log(JSON.stringify(info));
      }
    });
  }
}
